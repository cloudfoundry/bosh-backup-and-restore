---
#! This pipeline is set manually
#!
#!  To set the pipeline, run:
#!    fly -t bosh-ecosystem set-pipeline -p bbr-docker-build -c ci/pipelines/docker-build/pipeline.yml

#! ************************************
#! Secrets we need to run this pipeline
#! ************************************


secrets:
# used to upload images to docker registry
- &gcp_docker_password ((gcp_credentials_json))

- &docker_username ((docker.username))
- &docker_password ((docker.password))

params:
- &attempts 3


resources:
- name: ubuntu-lts
  type: registry-image
  source:
    repository: ubuntu
    tag: latest
    username: *docker_username
    password: *docker_password

- name: bbr-pcf-pipeline-tasks
  type: git
  source:
    uri: https://github.com/pivotal-cf/bbr-pcf-pipeline-tasks.git
    branch: main
    paths: [docker/Dockerfile]

- name: bbr-pcf-pipeline-tasks-final
  type: registry-image
  source:
    tag: final
    repository: us-west1-docker.pkg.dev/cf-bosh-concourse/bbr-pipeline/bbr-pipeline-tasks
    username: _json_key
    password: *gcp_docker_password

- name: oci-build-task-registry-image
  type: registry-image
  source:
    repository: concourse/oci-build-task
    username: *docker_username
    password: *docker_password

- name: every-monday
  type: time
  icon: timer-outline
  source:
    start: 9:00 AM
    stop: 5:00 PM
    days: [Monday,Friday]
    location: Europe/London

jobs:
- name: build-bbr-pcf-pipeline-tasks
  old_name: build-bbr-pcf-pipeline-tasks-rc
  serial: true
  plan:
  - in_parallel:
    - get: every-monday
      trigger: true
    - get: ubuntu-lts
      params:
        format: oci
    - get: bbr-pcf-pipeline-tasks
      trigger: true
    - get: oci-build-task-registry-image
  - task: build-image
    privileged: true
    # It is possible that building an image fails because we hit GH API rate limits.
    attempts: *attempts
    image: oci-build-task-registry-image
    config:
      platform: linux
      run:
        path: build
      inputs:
      - name: bbr-pcf-pipeline-tasks
      - name: ubuntu-lts
      outputs:
      - name: image
      params:
        CONTEXT: bbr-pcf-pipeline-tasks/docker
        IMAGE_ARG_BASE_IMAGE: ubuntu-lts/image.tar
        UNPACK_ROOTFS: true
      output_mapping: {image: image-bbr-pcf-pipeline-tasks}
  - task: test-for-required-binaries
    image: image
    config:
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          set -e
          which om
          which jq
          which bosh
          which ssh
          which fly
          which nc
  - task: write-tag-file
    image: image
    config:
      platform: linux
      outputs:
      - name: tag_file
      run:
        path: bash
        args:
        - -c
        - |
          set -e
          mkdir -p tag_file/
          echo "final" > tag_file/tag
  - put: bbr-pcf-pipeline-tasks-final
    params:
      image: image/image.tar
      additional_tags: tag_file/tag
