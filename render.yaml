secrets:
- ((github_read_write_token))
- access_key_id: ((bbr_aws_access_key.username))
  secret_access_key: ((bbr_aws_access_key.password))
  aws_role_arn: ((bbr_aws_access_key.role_arn))
- AWS_ACCESS_KEY: ((bbr_aws_access_key.username))
  AWS_ASSUMED_ROLE_ARN: ((bbr_aws_access_key.role_arn))
  AWS_SECRET_KEY: ((bbr_aws_access_key.password))
- ACCESS_KEY: ((bbr_aws_access_key.username))
  SECRET_KEY: ((bbr_aws_access_key.password))
  ROLE_ARN: ((bbr_aws_access_key.role_arn))
- ((broadcom_labs_gcp_credentials_json))
- ((gchat-webhook-dap-bosh-ecosystem-dev))
- 10.0.255.5
- ((test_bosh_director_ssh_key.private_key))
- ((test_bosh_director_ssh_key.public_key))
- ((bosh-ecosystem-shepherd-service-account))
- ((docker.username))
- ((docker.password))
- ((svc-bosh-ecosystem-ghe-personal-access-token))
- ((broadcom_artifactory_api_key))
number_of_claim_env_retries: 5
number_of_system_test_retries: 3
ts-bosh-env:
  BOSH_ENVIRONMENT: ((.:pooled-env.BOSH_ENVIRONMENT))
  BOSH_CLIENT: ((.:pooled-env.BOSH_CLIENT))
  BOSH_CLIENT_SECRET: ((.:pooled-env.BOSH_CLIENT_SECRET))
  BOSH_CA_CERT: ((.:pooled-env.BOSH_CA_CERT))
  BOSH_GW_HOST: ((.:pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
  BOSH_GW_USER: ((.:pooled-env.INSTANCE_JUMPBOX_USER))
  BOSH_GW_PRIVATE_KEY: ((.:pooled-env.INSTANCE_JUMPBOX_PRIVATE))
ts-2-bosh-env:
  BOSH_ENVIRONMENT: ((.:additional-pooled-env.BOSH_ENVIRONMENT))
  BOSH_CLIENT: ((.:additional-pooled-env.BOSH_CLIENT))
  BOSH_CLIENT_SECRET: ((.:additional-pooled-env.BOSH_CLIENT_SECRET))
  BOSH_CA_CERT: ((.:additional-pooled-env.BOSH_CA_CERT))
  BOSH_GW_HOST: ((.:additional-pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
  BOSH_GW_USER: ((.:additional-pooled-env.INSTANCE_JUMPBOX_USER))
  BOSH_GW_PRIVATE_KEY: ((.:additional-pooled-env.INSTANCE_JUMPBOX_PRIVATE))
test-bosh-director-deployment: test-bosh-director
resource_types:
- name: shepherd-v1
  type: registry-image
  source:
    repository: tas-gen-ai-docker-dev-local.usw1.packages.broadcom.com/ci/shepherd-resource
    tag: v1
    username: svc.bosh-ecosystem
    password: ((broadcom_artifactory_api_key))
  tags:
  - broadcom
- name: shepherd-v2
  tags:
  - broadcom
  source:
    tag: v1
    repository: tas-bosh-docker-dev-local.usw1.packages.broadcom.com/cryogenics/shepherd2-concourse-resource
    username: svc.bosh-ecosystem
    password: ((broadcom_artifactory_api_key))
  type: registry-image
- name: bosh-deployment-resource
  type: registry-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
    username: ((docker.username))
    password: ((docker.password))
- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource
    username: ((docker.username))
    password: ((docker.password))
- name: google-chat-notify-resource
  type: registry-image
  source:
    repository: springio/google-chat-notify-resource
    username: ((docker.username))
    password: ((docker.password))
    tag: 0.0.1-SNAPSHOT
resources:
- name: bosh-ecosystem-registry-image
  type: registry-image
  source:
    repository: bosh/bosh-ecosystem-concourse
    username: ((docker.username))
    password: ((docker.password))
- name: bosh-security-scanner-registry-image
  type: registry-image
  source:
    repository: bosh/security-scanner
    username: ((docker.username))
    password: ((docker.password))
- name: golang-release
  type: git
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: v*
- name: bbr-director-test-releases
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-backup-and-restore-test-releases.git
    branch: master
    paths:
    - test-bosh-backup-and-restore-release
- name: bbr-deployment-test-releases
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-backup-and-restore-test-releases.git
    branch: master
    paths:
    - redis-test-release
    - lock-ordering-release
    - many-bbr-jobs-release
- name: bosh-backup-and-restore
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-backup-and-restore.git
    username: bosh-admin-bot
    password: ((github_read_write_token))
    branch: master
    disable_git_lfs: true
- name: homebrew-tap
  type: git
  source:
    uri: https://github.com/cloudfoundry/homebrew-tap.git
    branch: master
    username: bosh-admin-bot
    password: ((github_read_write_token))
- name: bosh-shared-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-shared-ci.git
- name: bbr-dev-release
  type: gcs
  source:
    bucket: bbr-pipeline
    json_key: ((broadcom_labs_gcp_credentials_json))
    versioned_file: bbr-cli/bbr-dev-release.tar
- name: bbr-release
  type: github-release
  source:
    repository: bosh-backup-and-restore
    user: cloudfoundry
    access_token: ((github_read_write_token))
    release: true
- name: version
  type: semver
  source:
    bucket: bbr-pipeline
    key: bosh-backup-and-restore/version
    json_key: ((broadcom_labs_gcp_credentials_json))
    driver: gcs
- name: jammy-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git
- name: test-bosh-director-deployment
  type: bosh-deployment-resource
  source:
    deployment: test-bosh-director
    skip_check: true
- name: additional-test-bosh-director-deployment
  type: bosh-deployment-resource
  source:
    deployment: ci
    skip_check: true
- name: s3-config-validator-dev-release
  type: gcs
  source:
    bucket: bbr-pipeline
    json_key: ((broadcom_labs_gcp_credentials_json))
    versioned_file: validator-test-artifacts/bbr-s3-config-validator
- name: release-notes
  type: gcs
  source:
    bucket: bbr-pipeline
    json_key: ((broadcom_labs_gcp_credentials_json))
    versioned_file: bosh-backup-and-restore/release-notes.md
- name: tas-env
  type: shepherd-v1
  icon: pool
  source:
    target: epc-shepherd.lvn.broadcom.net
    config:
      namespace: bosh-team
      pool_namespace: tpsm
      pool: SF-TAS-10.2-Medium-Profile
- name: cryogenics-concourse-tasks
  type: git
  tags:
  - broadcom
  source:
    uri: https://github.gwd.broadcom.net/TNZ/cryogenics-concourse-tasks.git
    branch: main
    username: svc.bosh-ecosystem@broadcom.net
    password: ((svc-bosh-ecosystem-ghe-personal-access-token))
- name: gchat-notification
  type: google-chat-notify-resource
  source:
    url: ((gchat-webhook-dap-bosh-ecosystem-dev))
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git
    branch: main
- name: cf-deployment-env
  type: shepherd-v2
  source:
    url: https://v2-shepherd.lvn.broadcom.net
    service-account-key: ((bosh-ecosystem-shepherd-service-account))
    lease:
      namespace: bosh-ecosystem
      template:
        name: cfd-bosh-lite
        namespace: official
        revision: "2.0"
- name: disaster-recovery-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/disaster-recovery-acceptance-tests
    branch: main
- name: b-drats
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-disaster-recovery-acceptance-tests
    branch: master
- name: environment
  type: shepherd-v2
  source:
    url: https://v2-shepherd.lvn.broadcom.net
    service-account-key: ((bosh-ecosystem-shepherd-service-account))
    lease:
      namespace: bosh-ecosystem
      template:
        name: cfd-bosh-lite
        namespace: official
        revision: "2.0"
- name: additional-environment
  type: shepherd-v2
  source:
    url: https://v2-shepherd.lvn.broadcom.net
    service-account-key: ((bosh-ecosystem-shepherd-service-account))
    lease:
      namespace: bosh-ecosystem
      template:
        name: cfd-bosh-lite
        namespace: official
        revision: "2.0"
- name: golang-image
  type: registry-image
  source:
    repository: golang
    username: ((docker.username))
    password: ((docker.password))
- name: every-monday
  type: time
  source:
    initial_version: true
    start: 9:00 AM
    stop: 5:00 PM
    days:
    - Monday
    - Friday
    location: Europe/London
jobs:
- name: system-test-director
  serial: true
  serial_groups:
  - system-test-director
  plan:
  - in_parallel:
    - get: environment
      passed:
      - claim-env
      trigger: true
    - get: bosh-backup-and-restore
      passed:
      - claim-env
    - get: bosh-deployment
    - get: bbr-director-test-releases
    - get: jammy-stemcell
    - get: cryogenics-concourse-tasks
      tags:
      - broadcom
      passed:
      - claim-env
    - get: bosh-ecosystem-registry-image
  - task: alias-env
    image: bosh-ecosystem-registry-image
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: environment
  - load_var: pooled-env
    file: bosh-env/metadata.yml
    format: yml
  - task: generate-bosh-deployment-source-file
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BOSH_ENVIRONMENT: ((.:pooled-env.BOSH_ENVIRONMENT))
      BOSH_CLIENT: ((.:pooled-env.BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((.:pooled-env.BOSH_CLIENT_SECRET))
      BOSH_CA_CERT: ((.:pooled-env.BOSH_CA_CERT))
      BOSH_GW_HOST: ((.:pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
      BOSH_GW_USER: ((.:pooled-env.INSTANCE_JUMPBOX_USER))
      BOSH_GW_PRIVATE_KEY: ((.:pooled-env.INSTANCE_JUMPBOX_PRIVATE))
  - put: deploy-fake-director
    resource: test-bosh-director-deployment
    params:
      manifest: bosh-backup-and-restore/fixtures/fake-director.yml
      stemcells:
      - jammy-stemcell/*.tgz
      source_file: source-file/source-file.yml
      vars:
        deployment-name: test-bosh-director
        jumpbox-public-key: ((test_bosh_director_ssh_key.public_key))
        test_release_path: /tmp/build/put/bbr-director-test-releases/test-bosh-backup-and-restore-release
        internal_ip: 10.0.255.5
  - task: system-test-director
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-system-director/task.yml
    privileged: true
    params:
      USE_SHUTTLE: false
      DIRECTOR_HOST: 10.0.255.5
      DIRECTOR_SSH_KEY: ((test_bosh_director_ssh_key.private_key))
      DIRECTOR_SSH_USERNAME: jumpbox
      BOSH_DEPLOYMENT: test-bosh-director
      BOSH_ENVIRONMENT: ((.:pooled-env.BOSH_ENVIRONMENT))
      BOSH_CLIENT: ((.:pooled-env.BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((.:pooled-env.BOSH_CLIENT_SECRET))
      BOSH_CA_CERT: ((.:pooled-env.BOSH_CA_CERT))
      BOSH_GW_HOST: ((.:pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
      BOSH_GW_USER: ((.:pooled-env.INSTANCE_JUMPBOX_USER))
      BOSH_GW_PRIVATE_KEY: ((.:pooled-env.INSTANCE_JUMPBOX_PRIVATE))
  - put: delete-system-director
    resource: test-bosh-director-deployment
    params:
      delete:
        enabled: true
      source_file: source-file/source-file.yml
- name: system-test-deployment
  serial: true
  plan:
  - in_parallel:
    - get: bbr-deployment-test-releases
      trigger: true
    - get: environment
      passed:
      - claim-env
      trigger: true
    - get: additional-environment
      passed:
      - claim-env
    - get: bosh-backup-and-restore
      passed:
      - claim-env
    - get: bbr-director-test-releases
    - get: jammy-stemcell
    - get: bosh-ecosystem-registry-image
    - get: cryogenics-concourse-tasks
      tags:
      - broadcom
      passed:
      - claim-env
  - task: alias-env
    image: bosh-ecosystem-registry-image
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: environment
  - load_var: pooled-env
    file: bosh-env/metadata.yml
    format: yml
  - task: alias-additional-env
    image: bosh-ecosystem-registry-image
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: additional-environment
    output_mapping:
      bosh-env: additional-bosh-env
  - load_var: additional-pooled-env
    file: additional-bosh-env/metadata.yml
    format: yml
  - task: generate-bosh-deployment-source-file
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BOSH_ENVIRONMENT: ((.:additional-pooled-env.BOSH_ENVIRONMENT))
      BOSH_CLIENT: ((.:additional-pooled-env.BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((.:additional-pooled-env.BOSH_CLIENT_SECRET))
      BOSH_CA_CERT: ((.:additional-pooled-env.BOSH_CA_CERT))
      BOSH_GW_HOST: ((.:additional-pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
      BOSH_GW_USER: ((.:additional-pooled-env.INSTANCE_JUMPBOX_USER))
      BOSH_GW_PRIVATE_KEY: ((.:additional-pooled-env.INSTANCE_JUMPBOX_PRIVATE))
  - put: deploy-fake-director
    resource: additional-test-bosh-director-deployment
    params:
      manifest: bosh-backup-and-restore/fixtures/fake-director.yml
      stemcells:
      - jammy-stemcell/*.tgz
      source_file: source-file/source-file.yml
      vars:
        deployment-name: ci
        jumpbox-public-key: ((test_bosh_director_ssh_key.public_key))
        test_release_path: /tmp/build/put/bbr-director-test-releases/test-bosh-backup-and-restore-release
        internal_ip: 10.0.255.5
  - in_parallel:
    - task: upload-redis-test-release-to-bosh
      image: bosh-ecosystem-registry-image
      file: bosh-backup-and-restore/ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: redis-test-release
        BOSH_ENVIRONMENT: ((.:additional-pooled-env.BOSH_ENVIRONMENT))
        BOSH_CLIENT: ((.:additional-pooled-env.BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((.:additional-pooled-env.BOSH_CLIENT_SECRET))
        BOSH_CA_CERT: ((.:additional-pooled-env.BOSH_CA_CERT))
        BOSH_GW_HOST: ((.:additional-pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
        BOSH_GW_USER: ((.:additional-pooled-env.INSTANCE_JUMPBOX_USER))
        BOSH_GW_PRIVATE_KEY: ((.:additional-pooled-env.INSTANCE_JUMPBOX_PRIVATE))
    - task: upload-many-bbr-jobs-release-to-bosh-uaa
      image: bosh-ecosystem-registry-image
      file: bosh-backup-and-restore/ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: many-bbr-jobs-release
        BOSH_ENVIRONMENT: ((.:additional-pooled-env.BOSH_ENVIRONMENT))
        BOSH_CLIENT: ((.:additional-pooled-env.BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((.:additional-pooled-env.BOSH_CLIENT_SECRET))
        BOSH_CA_CERT: ((.:additional-pooled-env.BOSH_CA_CERT))
        BOSH_GW_HOST: ((.:additional-pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
        BOSH_GW_USER: ((.:additional-pooled-env.INSTANCE_JUMPBOX_USER))
        BOSH_GW_PRIVATE_KEY: ((.:additional-pooled-env.INSTANCE_JUMPBOX_PRIVATE))
    - task: upload-many-bbr-jobs-release-to-bosh
      image: bosh-ecosystem-registry-image
      file: bosh-backup-and-restore/ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: many-bbr-jobs-release
        BOSH_ENVIRONMENT: ((.:pooled-env.BOSH_ENVIRONMENT))
        BOSH_CLIENT: ((.:pooled-env.BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((.:pooled-env.BOSH_CLIENT_SECRET))
        BOSH_CA_CERT: ((.:pooled-env.BOSH_CA_CERT))
        BOSH_GW_HOST: ((.:pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
        BOSH_GW_USER: ((.:pooled-env.INSTANCE_JUMPBOX_USER))
        BOSH_GW_PRIVATE_KEY: ((.:pooled-env.INSTANCE_JUMPBOX_PRIVATE))
    - task: upload-redis-test-release-to-bosh
      image: bosh-ecosystem-registry-image
      file: bosh-backup-and-restore/ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: redis-test-release
        BOSH_ENVIRONMENT: ((.:pooled-env.BOSH_ENVIRONMENT))
        BOSH_CLIENT: ((.:pooled-env.BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((.:pooled-env.BOSH_CLIENT_SECRET))
        BOSH_CA_CERT: ((.:pooled-env.BOSH_CA_CERT))
        BOSH_GW_HOST: ((.:pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
        BOSH_GW_USER: ((.:pooled-env.INSTANCE_JUMPBOX_USER))
        BOSH_GW_PRIVATE_KEY: ((.:pooled-env.INSTANCE_JUMPBOX_PRIVATE))
    - task: upload-redis-test-release-to-bosh-uaa
      image: bosh-ecosystem-registry-image
      file: bosh-backup-and-restore/ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: redis-test-release
        BOSH_ENVIRONMENT: ((.:additional-pooled-env.BOSH_ENVIRONMENT))
        BOSH_CLIENT: ((.:additional-pooled-env.BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((.:additional-pooled-env.BOSH_CLIENT_SECRET))
        BOSH_CA_CERT: ((.:additional-pooled-env.BOSH_CA_CERT))
        BOSH_GW_HOST: ((.:additional-pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
        BOSH_GW_USER: ((.:additional-pooled-env.INSTANCE_JUMPBOX_USER))
        BOSH_GW_PRIVATE_KEY: ((.:additional-pooled-env.INSTANCE_JUMPBOX_PRIVATE))
    - task: upload-lock-ordering-release-to-bosh-uaa
      image: bosh-ecosystem-registry-image
      file: bosh-backup-and-restore/ci/tasks/bbr-upload-system-test-releases/task.yml
      params:
        RELEASE_NAME: lock-ordering-release
        BOSH_ENVIRONMENT: ((.:additional-pooled-env.BOSH_ENVIRONMENT))
        BOSH_CLIENT: ((.:additional-pooled-env.BOSH_CLIENT))
        BOSH_CLIENT_SECRET: ((.:additional-pooled-env.BOSH_CLIENT_SECRET))
        BOSH_CA_CERT: ((.:additional-pooled-env.BOSH_CA_CERT))
        BOSH_GW_HOST: ((.:additional-pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
        BOSH_GW_USER: ((.:additional-pooled-env.INSTANCE_JUMPBOX_USER))
        BOSH_GW_PRIVATE_KEY: ((.:additional-pooled-env.INSTANCE_JUMPBOX_PRIVATE))
    - task: allow-connections-to-bosh-director-on-port-25555
      image: bosh-ecosystem-registry-image
      config:
        platform: linux
        inputs:
        - name: additional-environment
        run:
          path: /bin/bash
          args:
          - -c
          - |
            #!/bin/bash
            . <(smith -l additional-environment/metadata bosh)
            ENV_NAME=$(cat additional-environment/metadata | jq .name -r)
            bosh cc > cc.yml
            bosh ucc -n <( bosh int cc.yml -o <( echo -e "- type: replace\n  path: /vm_types/name=minimal/cloud_properties/tags?\n  value: [${ENV_NAME}-bosh-open]") )
  - task: system-deployment-with-uaa
    image: bosh-ecosystem-registry-image
    attempts: 3
    file: bosh-backup-and-restore/ci/tasks/bbr-system-deployment/task.yml
    params:
      BOSH_ENVIRONMENT: ((.:additional-pooled-env.BOSH_ENVIRONMENT))
      BOSH_CLIENT: ((.:additional-pooled-env.BOSH_CLIENT))
      BOSH_CLIENT_SECRET: ((.:additional-pooled-env.BOSH_CLIENT_SECRET))
      BOSH_CA_CERT: ((.:additional-pooled-env.BOSH_CA_CERT))
      BOSH_GW_HOST: ((.:additional-pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP)):22
      BOSH_GW_USER: ((.:additional-pooled-env.INSTANCE_JUMPBOX_USER))
      BOSH_GW_PRIVATE_KEY: ((.:additional-pooled-env.INSTANCE_JUMPBOX_PRIVATE))
- name: test-build-s3-config-validator
  serial_groups:
  - only_1_job_should_bump_the_BUILD_VERSION_at_a_time_to_avoid_race_condition
  plan:
  - in_parallel:
    - get: bosh-backup-and-restore
      trigger: true
    - get: bosh-ecosystem-registry-image
  - task: unit-test
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-s3-config-validator-unit-test/task.yml
    params:
      AWS_ACCESS_KEY: ((bbr_aws_access_key.username))
      AWS_ASSUMED_ROLE_ARN: ((bbr_aws_access_key.role_arn))
      AWS_SECRET_KEY: ((bbr_aws_access_key.password))
  - task: e2e-test
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-s3-config-validator-e2e-test/task.yml
    params:
      AWS_ACCESS_KEY: ((bbr_aws_access_key.username))
      AWS_ASSUMED_ROLE_ARN: ((bbr_aws_access_key.role_arn))
      AWS_SECRET_KEY: ((bbr_aws_access_key.password))
  - task: build
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-s3-config-validator-build/task.yml
  - put: s3-config-validator-dev-release
    params:
      file: bbr-s3-config-validator-build/bbr-s3-config-validator
- name: validate-aws-s3-config
  serial: true
  plan:
  - in_parallel:
    - get: s3-config-validator-dev-release
      passed:
      - test-build-s3-config-validator
      trigger: true
    - get: bosh-backup-and-restore
      passed:
      - test-build-s3-config-validator
    - get: bosh-ecosystem-registry-image
  - task: run-validator
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-s3-config-validator-validate-aws-s3-config/task.yml
    params:
      ACCESS_KEY: ((bbr_aws_access_key.username))
      SECRET_KEY: ((bbr_aws_access_key.password))
      ROLE_ARN: ((bbr_aws_access_key.role_arn))
- name: release-fan-in
  plan:
  - in_parallel:
    - get: bosh-backup-and-restore
      passed:
      - system-test-deployment
      - system-test-director
      - validate-aws-s3-config
      trigger: true
- name: build-dev
  plan:
  - in_parallel:
    - get: bosh-backup-and-restore
      trigger: true
      passed:
      - release-fan-in
    - get: bosh-ecosystem-registry-image
  - task: build-bbr
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-build/task.yml
  - task: build-s3-config-validator
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-s3-config-validator-build/task.yml
  - put: bbr-dev-release
    params:
      file: bbr-build/bbr-*.tar
- name: run-drats
  serial: true
  plan:
  - get: bosh-backup-and-restore
    passed:
    - build-dev
  - get: cf-deployment
  - get: cf-deployment-concourse-tasks
  - get: disaster-recovery-acceptance-tests
  - get: bosh-ecosystem-registry-image
  - get: bbr-dev-release
    trigger: true
    passed:
    - build-dev
  - put: cf-deployment-env
    attempts: 5
    timeout: 6h
    params:
      action: create
      duration: 24h
      resource: cf-deployment-env
      timeout: 6h
  - task: deploy-backup-restore-components
    image: bosh-ecosystem-registry-image
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      toolsmiths-env: cf-deployment-env
      ops-files: cf-deployment
    params:
      OPS_FILES: |
        operations/scale-to-one-az.yml operations/use-compiled-releases.yml operations/backup-and-restore/enable-backup-restore.yml operations/enable-nfs-volume-service.yml operations/experimental/disable-interpolate-service-bindings.yml operations/experimental/enable-traffic-to-internal-networks.yml operations/enable-smb-volume-service.yml operations/backup-and-restore/skip-backup-restore-droplets-and-packages.yml
  - task: bosh-run-errand-nfsbrokerpush
    image: bosh-ecosystem-registry-image
    attempts: 5
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: cf-deployment-env
    params:
      ERRAND_NAME: nfsbrokerpush
  - task: bosh-run-errand-smbbrokerpush
    image: bosh-ecosystem-registry-image
    attempts: 5
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: cf-deployment-env
    params:
      ERRAND_NAME: smbbrokerpush
  - load_var: pooled-env
    file: cf-deployment-env/metadata
    format: json
  - task: update-integration-config
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/setup-drats-integration-config/task.yml
    input_mapping:
      integration-configs: disaster-recovery-acceptance-tests
    params:
      SYSTEM_DOMAIN: ((.:pooled-env.name)).cf-app.com
      JUMPBOX_PRIVATE_KEY: ((.:pooled-env.bosh.jumpbox_private_key))
      CREDHUB_CLIENT: ((.:pooled-env.bosh.credhub_client))
      CREDHUB_SECRET: ((.:pooled-env.bosh.credhub_secret))
      CREDHUB_CA_CERT: ((.:pooled-env.bosh.credhub_ca_cert))
      CREDHUB_SERVER: ((.:pooled-env.bosh.credhub_server))
      CREDHUB_PROXY: ((.:pooled-env.bosh.bosh_all_proxy))
      BOSH_ENVIRONMENT: ((.:pooled-env.bosh.bosh_environment))
      BOSH_CA_CERT: ((.:pooled-env.bosh.bosh_ca_cert))
      BOSH_ALL_PROXY: ((.:pooled-env.bosh.bosh_all_proxy))
      BOSH_CLIENT: ((.:pooled-env.bosh.bosh_client))
      BOSH_CLIENT_SECRET: ((.:pooled-env.bosh.bosh_client_secret))
  - task: acceptance-tests
    image: bosh-ecosystem-registry-image
    file: disaster-recovery-acceptance-tests/ci/tasks/drats-with-integration-config/task.yml
    privileged: true
    input_mapping:
      drats-integration-config: updated-integration-configs
      bbr-binary-release: bbr-dev-release
    params:
      CONFIG_FILE_PATH: ci/integration_config.json
      CF_DIAL_TIMEOUT: 300
  - put: cf-deployment-env
    params:
      action: release
      resource: cf-deployment-env
- name: run-b-drats
  serial: true
  plan:
  - in_parallel:
    - get: bosh-backup-and-restore
      passed:
      - build-dev
    - get: b-drats
    - get: bbr-dev-release
      trigger: true
      params:
        unpack: true
      passed:
      - build-dev
    - get: cryogenics-concourse-tasks
      tags:
      - broadcom
    - get: jammy-stemcell
    - get: bosh-ecosystem-registry-image
  - do:
    - put: tas-env
      attempts: 5
      timeout: 6h
      params:
        action: create
        duration: 24h
        resource: tas-env
        timeout: 6h
    - in_parallel:
      - task: create-b-drats-config
        image: bosh-ecosystem-registry-image
        file: cryogenics-concourse-tasks/tasks/toolsmiths/generate-b-drats-config-from-tas-env/task.yml
        input_mapping:
          repo: cryogenics-concourse-tasks
          env: tas-env
          stemcell: jammy-stemcell
        params:
          INCLUDE_DEPLOYMENT_TESTCASE: true
          INCLUDE_TRUNCATE_DB_BLOBSTORE_TESTCASE: false
          INCLUDE_CREDHUB_TESTCASE: false
          TIMEOUT_IN_MINUTES: 2880
        output_mapping:
          config: b-drats-config
      - load_var: env-metadata
        file: tas-env/metadata
        format: json
    - task: run-b-drats
      image: bosh-ecosystem-registry-image
      file: b-drats/ci/tasks/run-b-drats/task.yml
      privileged: true
      input_mapping:
        bosh-disaster-recovery-acceptance-tests: b-drats
        bbr-binary-release: bbr-dev-release
        b-drats-integration-config: b-drats-config
      params:
        JUMPBOX_IP: ((.:env-metadata.ops_manager_public_ip))
        JUMPBOX_PRIVATE_KEY: ((.:env-metadata.ops_manager_private_key))
        JUMPBOX_USER: ubuntu
        BBR_BINARY: bbr-binary-release/releases/bbr
        SSH_ALIVE_INTERVAL: 60
        GINKGO_TIMEOUT: 48h0m0s
    ensure:
      put: tas-env
      params:
        action: release
        resource: tas-env
- name: release-new-patch
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: patch
- name: release-new-minor
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: minor
- name: release-new-major
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: major
- name: automatically-release-new-patch
  serial_groups:
  - version
  plan:
  - in_parallel:
    - get: bosh-backup-and-restore
      trigger: true
      passed:
      - run-drats
      - run-b-drats
    - get: current-version
      resource: version
    - get: patched-version
      resource: version
      params:
        bump: patch
    - get: bosh-shared-ci
    - get: bosh-security-scanner-registry-image
  - try:
      task: check-for-patched-cves
      file: bosh-shared-ci/tasks/release/check-for-patched-cves.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        input_repo: bosh-backup-and-restore
        version: current-version
      params:
        SEVERITY: CRITICAL,HIGH
      on_success:
        do:
        - put: release-notes
          params:
            file: release-notes/release-notes.md
        - put: version
          params:
            file: patched-version/version
  - task: ensure-cve-checker-succeeded
    file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
    image: bosh-security-scanner-registry-image
    input_mapping:
      task-output-folder: patched_cves
- name: publish-release
  disable_manual_trigger: true
  serial_groups:
  - version
  plan:
  - in_parallel:
    - get: bosh-backup-and-restore
      passed:
      - run-drats
      - run-b-drats
    - get: version
      trigger: true
    - get: bosh-ecosystem-registry-image
    - get: release-notes
  - load_var: version-number
    file: version/version
  - task: build-bbr
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-build/task.yml
  - task: build-s3-config-validator
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-s3-config-validator-build/task.yml
  - task: package-release
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/package-release/task.yml
  - put: bbr-release
    params:
      name: version/version
      tag: version/version
      tag_prefix: v
      body: release-notes/release-notes.md
      commitish: bosh-backup-and-restore/.git/ref
      generate_release_notes: true
      globs:
      - packaged-release/*
  - put: release-notes
    params:
      file: release_metadata/empty-file
  - load_var: github-release-url
    file: bbr-release/url
  - put: gchat-notification
    inputs: []
    params:
      text: |
        *BBR CLI*: version `((.:version-number))` has been published to github!
        Next steps: Review the release notes <((.:github-release-url))|here>.
- name: update-homebrew-formula
  serial: true
  plan:
  - in_parallel:
    - get: homebrew-tap
    - get: bbr-release
      passed:
      - publish-release
      trigger: true
    - get: bosh-backup-and-restore
      passed:
      - publish-release
    - get: bosh-ecosystem-registry-image
  - task: update-homebrew-formula
    image: bosh-ecosystem-registry-image
    file: bosh-backup-and-restore/ci/tasks/bbr-update-homebrew-formula/task.yml
  - put: homebrew-tap
    params:
      repository: updated-homebrew-tap
      rebase: true
- name: claim-env
  plan:
  - in_parallel:
      steps:
      - get: bosh-backup-and-restore
        trigger: true
      - get: cryogenics-concourse-tasks
        tags:
        - broadcom
      - put: environment
        attempts: 5
        timeout: 6h
        params:
          action: create
          duration: 24h
          resource: environment
          timeout: 6h
      - put: additional-environment
        attempts: 5
        timeout: 6h
        params:
          action: create
          duration: 24h
          resource: additional-environment
          timeout: 6h
- name: unclaim-env
  plan:
  - in_parallel:
      steps:
      - get: bosh-backup-and-restore
        trigger: true
        passed:
        - system-test-deployment
        - system-test-director
      - get: environment
        passed:
        - system-test-deployment
        - system-test-director
      - get: additional-environment
        passed:
        - system-test-deployment
  - put: environment
    params:
      action: release
      resource: environment
  - put: additional-environment
    params:
      action: release
      resource: additional-environment
- name: bump-deps-bbr-cli
  plan:
  - in_parallel:
    - get: every-monday
      trigger: true
    - get: bosh-backup-and-restore
    - get: golang-release
    - get: golang-image
  - task: bump-deps
    file: golang-release/ci/tasks/shared/bump-deps.yml
    input_mapping:
      input_repo: bosh-backup-and-restore
    output_mapping:
      output_repo: bosh-backup-and-restore
  - task: test-unit
    file: bosh-backup-and-restore/ci/tasks/test-unit/task.yml
    image: golang-image
  - put: bosh-backup-and-restore
    params:
      repository: bosh-backup-and-restore
      rebase: true
- name: bump-deps-s3-config-validator
  plan:
  - in_parallel:
    - get: every-monday
      trigger: true
    - get: bosh-backup-and-restore
    - get: golang-release
    - get: golang-image
  - task: bump-deps
    file: golang-release/ci/tasks/shared/bump-deps.yml
    input_mapping:
      input_repo: bosh-backup-and-restore
    output_mapping:
      output_repo: bosh-backup-and-restore
    params:
      SOURCE_PATH: s3-config-validator/src/
  - task: test-unit-s3-config-validator
    file: bosh-backup-and-restore/ci/tasks/test-unit-s3-config-validator/task.yml
    image: golang-image
  - put: bosh-backup-and-restore
    params:
      repository: bosh-backup-and-restore
      rebase: true
